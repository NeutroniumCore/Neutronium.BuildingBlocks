### YamlMime:ManagedReference
items:
- uid: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions
  id: RouterBuilderExtensions
  parent: Neutronium.BuildingBlocks.Application.Navigation
  children:
  - Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean)
  - Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.String)
  langs:
  - csharp
  - vb
  name: RouterBuilderExtensions
  nameWithType: RouterBuilderExtensions
  fullName: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions
  type: Class
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
      branch: master
      repo: https://github.com/NeutroniumCore/Neutronium.BuildingBlocks.git
    id: RouterBuilderExtensions
    path: ../Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
    startLine: 7
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nProvides extensions for <xref href=\"Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class RouterBuilderExtensions
    content.vb: Public Module RouterBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean)
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean)
  id: GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetTemplateConvention(IRouterBuilder, String, Boolean)
  nameWithType: RouterBuilderExtensions.GetTemplateConvention(IRouterBuilder, String, Boolean)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
      branch: master
      repo: https://github.com/NeutroniumCore/Neutronium.BuildingBlocks.git
    id: GetTemplateConvention
    path: ../Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
    startLine: 16
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nCreate a convention router for the given router builder\n"
  example: []
  syntax:
    content: public static IConventionRouter GetTemplateConvention(this IRouterBuilder routerBuilder, string template, bool lowerPath = true)
    parameters:
    - id: routerBuilder
      type: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
      description: ''
    - id: template
      type: System.String
      description: ''
    - id: lowerPath
      type: System.Boolean
      description: ''
    return:
      type: Neutronium.Core.Navigation.Routing.IConventionRouter
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTemplateConvention(routerBuilder As IRouterBuilder, template As String, lowerPath As Boolean = True) As IConventionRouter
  overload: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.String)
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.String)
  id: GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.String)
  isExtensionMethod: true
  parent: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetTemplateConvention(IRouterBuilder, String, String)
  nameWithType: RouterBuilderExtensions.GetTemplateConvention(IRouterBuilder, String, String)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
      branch: master
      repo: https://github.com/NeutroniumCore/Neutronium.BuildingBlocks.git
    id: GetTemplateConvention
    path: ../Neutronium.BuildingBlocks.Application/Navigation/RouterBuilderExtensions.cs
    startLine: 28
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nCreate a convention router for the given router builder\n"
  example: []
  syntax:
    content: public static IConventionRouter GetTemplateConvention(this IRouterBuilder routerBuilder, string template, string postFix)
    parameters:
    - id: routerBuilder
      type: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
      description: ''
    - id: template
      type: System.String
      description: ''
    - id: postFix
      type: System.String
      description: ''
    return:
      type: Neutronium.Core.Navigation.Routing.IConventionRouter
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTemplateConvention(routerBuilder As IRouterBuilder, template As String, postFix As String) As IConventionRouter
  overload: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
  parent: Neutronium.BuildingBlocks.Application.Navigation
  name: IRouterBuilder
  nameWithType: IRouterBuilder
  fullName: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
- uid: Neutronium.BuildingBlocks.Application.Navigation
  commentId: N:Neutronium.BuildingBlocks.Application.Navigation
  name: Neutronium.BuildingBlocks.Application.Navigation
  nameWithType: Neutronium.BuildingBlocks.Application.Navigation
  fullName: Neutronium.BuildingBlocks.Application.Navigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention*
  commentId: Overload:Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention
  name: GetTemplateConvention
  nameWithType: RouterBuilderExtensions.GetTemplateConvention
  fullName: Neutronium.BuildingBlocks.Application.Navigation.RouterBuilderExtensions.GetTemplateConvention
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Neutronium.Core.Navigation.Routing.IConventionRouter
  commentId: T:Neutronium.Core.Navigation.Routing.IConventionRouter
  parent: Neutronium.Core.Navigation.Routing
  isExternal: true
  name: IConventionRouter
  nameWithType: IConventionRouter
  fullName: Neutronium.Core.Navigation.Routing.IConventionRouter
- uid: Neutronium.Core.Navigation.Routing
  commentId: N:Neutronium.Core.Navigation.Routing
  isExternal: true
  name: Neutronium.Core.Navigation.Routing
  nameWithType: Neutronium.Core.Navigation.Routing
  fullName: Neutronium.Core.Navigation.Routing
