### YamlMime:ManagedReference
items:
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1
  id: NavigationContext`1
  parent: Neutronium.BuildingBlocks.Application.Navigation
  children:
  - Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate
  langs:
  - csharp
  - vb
  name: NavigationContext<T>
  nameWithType: NavigationContext<T>
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext<T>
  type: Class
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/NavigationContext.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: NavigationContext
    path: ../Neutronium.BuildingBlocks.Application/Navigation/NavigationContext.cs
    startLine: 26
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nNavigation context with before event\n"
  example: []
  syntax:
    content: 'public class NavigationContext<T> : NavigationContext'
    typeParameters:
    - id: T
      description: "\nviewModel type\n"
    content.vb: >-
      Public Class NavigationContext(Of T)
          Inherits NavigationContext
  inheritance:
  - System.Object
  - Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
  inheritedMembers:
  - Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.ResolutionKey
  - Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.RouteName
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: NavigationContext(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext(Of T)
  name.vb: NavigationContext(Of T)
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate
  commentId: P:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate
  id: BeforeNavigate
  parent: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1
  langs:
  - csharp
  - vb
  name: BeforeNavigate
  nameWithType: NavigationContext<T>.BeforeNavigate
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext<T>.BeforeNavigate
  type: Property
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/NavigationContext.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: BeforeNavigate
    path: ../Neutronium.BuildingBlocks.Application/Navigation/NavigationContext.cs
    startLine: 31
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nAction that wil be called before navigation\n"
  example: []
  syntax:
    content: public Action<T> BeforeNavigate { get; set; }
    parameters: []
    return:
      type: System.Action{{T}}
    content.vb: Public Property BeforeNavigate As Action(Of T)
  overload: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate*
  nameWithType.vb: NavigationContext(Of T).BeforeNavigate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext(Of T).BeforeNavigate
references:
- uid: Neutronium.BuildingBlocks.Application.Navigation
  commentId: N:Neutronium.BuildingBlocks.Application.Navigation
  name: Neutronium.BuildingBlocks.Application.Navigation
  nameWithType: Neutronium.BuildingBlocks.Application.Navigation
  fullName: Neutronium.BuildingBlocks.Application.Navigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
  parent: Neutronium.BuildingBlocks.Application.Navigation
  name: NavigationContext
  nameWithType: NavigationContext
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.ResolutionKey
  commentId: P:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.ResolutionKey
  parent: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
  name: ResolutionKey
  nameWithType: NavigationContext.ResolutionKey
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.ResolutionKey
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.RouteName
  commentId: P:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.RouteName
  parent: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext
  name: RouteName
  nameWithType: NavigationContext.RouteName
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext.RouteName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate*
  commentId: Overload:Neutronium.BuildingBlocks.Application.Navigation.NavigationContext`1.BeforeNavigate
  name: BeforeNavigate
  nameWithType: NavigationContext<T>.BeforeNavigate
  fullName: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext<T>.BeforeNavigate
  nameWithType.vb: NavigationContext(Of T).BeforeNavigate
  fullName.vb: Neutronium.BuildingBlocks.Application.Navigation.NavigationContext(Of T).BeforeNavigate
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
