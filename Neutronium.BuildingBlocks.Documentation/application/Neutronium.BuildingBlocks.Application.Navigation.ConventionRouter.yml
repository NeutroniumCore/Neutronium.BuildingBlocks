### YamlMime:ManagedReference
items:
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  id: ConventionRouter
  parent: Neutronium.BuildingBlocks.Application.Navigation
  children:
  - Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean,System.String)
  - Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  - Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Type,System.String)
  - Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register``1(System.String)
  langs:
  - csharp
  - vb
  name: ConventionRouter
  nameWithType: ConventionRouter
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  type: Class
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: ConventionRouter
    path: ../Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
    startLine: 10
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nObject that build navigation based on convention\n"
  example: []
  syntax:
    content: 'public class ConventionRouter : IConventionRouter'
    content.vb: >-
      Public Class ConventionRouter
          Implements IConventionRouter
  inheritance:
  - System.Object
  implements:
  - Neutronium.Core.Navigation.Routing.IConventionRouter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean,System.String)
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean,System.String)
  id: '#ctor(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder,System.String,System.Boolean,System.String)'
  parent: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  langs:
  - csharp
  - vb
  name: ConventionRouter(IRouterBuilder, String, Boolean, String)
  nameWithType: ConventionRouter.ConventionRouter(IRouterBuilder, String, Boolean, String)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.ConventionRouter(Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder, System.String, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: .ctor
    path: ../Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
    startLine: 27
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\n\n"
  example: []
  syntax:
    content: public ConventionRouter(IRouterBuilder routerBuilder, string format, bool lowerPath = true, string postFix = null)
    parameters:
    - id: routerBuilder
      type: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
      description: ''
    - id: format
      type: System.String
      description: >
        Route name using template string where {vm} is the class name without postfix,

        {namespace} is the namespace, and {id} is the id provided in the register method
    - id: lowerPath
      type: System.Boolean
      description: true to use class name in lower case
    - id: postFix
      type: System.String
      description: Class name post fix to be discarded- default to &quot;ViewModel&quot;
    content.vb: Public Sub New(routerBuilder As IRouterBuilder, format As String, lowerPath As Boolean = True, postFix As String = Nothing)
  overload: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  id: Register(System.Collections.Generic.IEnumerable{System.Type})
  parent: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  langs:
  - csharp
  - vb
  name: Register(IEnumerable<Type>)
  nameWithType: ConventionRouter.Register(IEnumerable<Type>)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Register
    path: ../Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
    startLine: 40
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nAdd the corresponding types to the convention\n"
  example: []
  syntax:
    content: public IConventionRouter Register(IEnumerable<Type> types)
    parameters:
    - id: types
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: ''
    return:
      type: Neutronium.Core.Navigation.Routing.IConventionRouter
      description: ''
    content.vb: Public Function Register(types As IEnumerable(Of Type)) As IConventionRouter
  overload: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register*
  implements:
  - Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  nameWithType.vb: ConventionRouter.Register(IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: Register(IEnumerable(Of Type))
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register``1(System.String)
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register``1(System.String)
  id: Register``1(System.String)
  parent: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  langs:
  - csharp
  - vb
  name: Register<T>(String)
  nameWithType: ConventionRouter.Register<T>(String)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register<T>(System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Register
    path: ../Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
    startLine: 52
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nAdd the corresponding type to the convention, using option id\n"
  example: []
  syntax:
    content: public IConventionRouter Register<T>(string id = null)
    parameters:
    - id: id
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: type to register
    return:
      type: Neutronium.Core.Navigation.Routing.IConventionRouter
      description: ''
    content.vb: Public Function Register(Of T)(id As String = Nothing) As IConventionRouter
  overload: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register*
  implements:
  - Neutronium.Core.Navigation.Routing.IConventionRouter.Register``1(System.String)
  nameWithType.vb: ConventionRouter.Register(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(Of T)(System.String)
  name.vb: Register(Of T)(String)
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Type,System.String)
  commentId: M:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Type,System.String)
  id: Register(System.Type,System.String)
  parent: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter
  langs:
  - csharp
  - vb
  name: Register(Type, String)
  nameWithType: ConventionRouter.Register(Type, String)
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register(System.Type, System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Register
    path: ../Neutronium.BuildingBlocks.Application/Navigation/ConventionRouter.cs
    startLine: 63
  assemblies:
  - Neutronium.BuildingBlocks.Application
  namespace: Neutronium.BuildingBlocks.Application.Navigation
  summary: "\nAdd the corresponding type to the convention, using option id\n"
  example: []
  syntax:
    content: public IConventionRouter Register(Type type, string id = null)
    parameters:
    - id: type
      type: System.Type
      description: type to register
    - id: id
      type: System.String
      description: ''
    return:
      type: Neutronium.Core.Navigation.Routing.IConventionRouter
      description: ''
    content.vb: Public Function Register(type As Type, id As String = Nothing) As IConventionRouter
  overload: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register*
  implements:
  - Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Neutronium.BuildingBlocks.Application.Navigation
  commentId: N:Neutronium.BuildingBlocks.Application.Navigation
  name: Neutronium.BuildingBlocks.Application.Navigation
  nameWithType: Neutronium.BuildingBlocks.Application.Navigation
  fullName: Neutronium.BuildingBlocks.Application.Navigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Neutronium.Core.Navigation.Routing.IConventionRouter
  commentId: T:Neutronium.Core.Navigation.Routing.IConventionRouter
  parent: Neutronium.Core.Navigation.Routing
  isExternal: true
  name: IConventionRouter
  nameWithType: IConventionRouter
  fullName: Neutronium.Core.Navigation.Routing.IConventionRouter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Neutronium.Core.Navigation.Routing
  commentId: N:Neutronium.Core.Navigation.Routing
  isExternal: true
  name: Neutronium.Core.Navigation.Routing
  nameWithType: Neutronium.Core.Navigation.Routing
  fullName: Neutronium.Core.Navigation.Routing
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor*
  commentId: Overload:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.#ctor
  name: ConventionRouter
  nameWithType: ConventionRouter.ConventionRouter
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.ConventionRouter
- uid: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
  commentId: T:Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
  parent: Neutronium.BuildingBlocks.Application.Navigation
  name: IRouterBuilder
  nameWithType: IRouterBuilder
  fullName: Neutronium.BuildingBlocks.Application.Navigation.IRouterBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register*
  commentId: Overload:Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register
  name: Register
  nameWithType: ConventionRouter.Register
  fullName: Neutronium.BuildingBlocks.Application.Navigation.ConventionRouter.Register
- uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
  parent: Neutronium.Core.Navigation.Routing.IConventionRouter
  isExternal: true
  name: Register(IEnumerable<Type>)
  nameWithType: IConventionRouter.Register(IEnumerable<Type>)
  fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable<System.Type>)
  nameWithType.vb: IConventionRouter.Register(IEnumerable(Of Type))
  fullName.vb: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: Register(IEnumerable(Of Type))
  spec.csharp:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
    name: Register
    nameWithType: IConventionRouter.Register
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Collections.Generic.IEnumerable{System.Type})
    name: Register
    nameWithType: IConventionRouter.Register
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register``1(System.String)
  commentId: M:Neutronium.Core.Navigation.Routing.IConventionRouter.Register``1(System.String)
  parent: Neutronium.Core.Navigation.Routing.IConventionRouter
  isExternal: true
  name: Register<T>(String)
  nameWithType: IConventionRouter.Register<T>(String)
  fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register<T>(System.String)
  nameWithType.vb: IConventionRouter.Register(Of T)(String)
  fullName.vb: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(Of T)(System.String)
  name.vb: Register(Of T)(String)
  spec.csharp:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register``1(System.String)
    name: Register<T>
    nameWithType: IConventionRouter.Register<T>
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register``1(System.String)
    name: Register(Of T)
    nameWithType: IConventionRouter.Register(Of T)
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type,System.String)
  commentId: M:Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type,System.String)
  parent: Neutronium.Core.Navigation.Routing.IConventionRouter
  isExternal: true
  name: Register(Type, String)
  nameWithType: IConventionRouter.Register(Type, String)
  fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type, System.String)
  spec.csharp:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type,System.String)
    name: Register
    nameWithType: IConventionRouter.Register
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.Core.Navigation.Routing.IConventionRouter.Register(System.Type,System.String)
    name: Register
    nameWithType: IConventionRouter.Register
    fullName: Neutronium.Core.Navigation.Routing.IConventionRouter.Register
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
