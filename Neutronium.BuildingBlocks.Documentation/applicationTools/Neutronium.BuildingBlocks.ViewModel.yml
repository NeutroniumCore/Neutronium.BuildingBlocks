### YamlMime:ManagedReference
items:
- uid: Neutronium.BuildingBlocks.ViewModel
  commentId: T:Neutronium.BuildingBlocks.ViewModel
  id: ViewModel
  parent: Neutronium.BuildingBlocks
  children:
  - Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  - Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  - Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  - Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  - Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  langs:
  - csharp
  - vb
  name: ViewModel
  nameWithType: ViewModel
  fullName: Neutronium.BuildingBlocks.ViewModel
  type: Class
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: ViewModel
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 8
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  summary: "\nBase class for ViewModel providing implementation of <xref href=\"System.ComponentModel.INotifyPropertyChanging\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.INotifyPropertyChanging\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public abstract class ViewModel : INotifyPropertyChanged, INotifyPropertyChanging'
    content.vb: >-
      Public MustInherit Class ViewModel
          Implements INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  commentId: E:Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  id: PropertyChanged
  parent: Neutronium.BuildingBlocks.ViewModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ViewModel.PropertyChanged
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  type: Event
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: PropertyChanged
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 10
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  commentId: E:Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  id: PropertyChanging
  parent: Neutronium.BuildingBlocks.ViewModel
  langs:
  - csharp
  - vb
  name: PropertyChanging
  nameWithType: ViewModel.PropertyChanging
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  type: Event
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: PropertyChanging
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 11
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  syntax:
    content: public event PropertyChangingEventHandler PropertyChanging
    return:
      type: System.ComponentModel.PropertyChangingEventHandler
    content.vb: Public Event PropertyChanging As PropertyChangingEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  id: Set``1(``0@,``0,System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  langs:
  - csharp
  - vb
  name: Set<T>(ref T, T, String)
  nameWithType: ViewModel.Set<T>(ref T, T, String)
  fullName: Neutronium.BuildingBlocks.ViewModel.Set<T>(ref T, T, System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Set
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 23
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  summary: "\nUpdate property value and call corresponding <xref href=\"System.ComponentModel.INotifyPropertyChanging\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.INotifyPropertyChanging\" data-throw-if-not-resolved=\"false\"></xref> if needed\n"
  example: []
  syntax:
    content: protected bool Set<T>(ref T property, T value, string propertyName = null)
    parameters:
    - id: property
      type: '{T}'
      description: Property to be updated
    - id: value
      type: '{T}'
      description: New value
    - id: propertyName
      type: System.String
      description: Property name (filled by compiler when left null)
    typeParameters:
    - id: T
      description: Property type
    return:
      type: System.Boolean
      description: "\nTrue if property value has changed and events have been fired\n"
    content.vb: Protected Function Set(Of T)(ByRef property As T, value As T, propertyName As String = Nothing) As Boolean
  overload: Neutronium.BuildingBlocks.ViewModel.Set*
  nameWithType.vb: ViewModel.Set(Of T)(ByRef T, T, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Neutronium.BuildingBlocks.ViewModel.Set(Of T)(ByRef T, T, System.String)
  name.vb: Set(Of T)(ByRef T, T, String)
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  id: PropertyHasChanged(System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  langs:
  - csharp
  - vb
  name: PropertyHasChanged(String)
  nameWithType: ViewModel.PropertyHasChanged(String)
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: PropertyHasChanged
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 34
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  syntax:
    content: protected void PropertyHasChanged(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Protected Sub PropertyHasChanged(propertyName As String)
  overload: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  id: PropertyIsChanging(System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  langs:
  - csharp
  - vb
  name: PropertyIsChanging(String)
  nameWithType: ViewModel.PropertyIsChanging(String)
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: PropertyIsChanging
    path: ../Neutronium.BuildingBlocks.ApplicationTools/ViewModel.cs
    startLine: 39
  assemblies:
  - Neutronium.BuildingBlocks.ApplicationTools
  namespace: Neutronium.BuildingBlocks
  syntax:
    content: protected void PropertyIsChanging(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    content.vb: Protected Sub PropertyIsChanging(propertyName As String)
  overload: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: Neutronium.BuildingBlocks
  commentId: N:Neutronium.BuildingBlocks
  name: Neutronium.BuildingBlocks
  nameWithType: Neutronium.BuildingBlocks
  fullName: Neutronium.BuildingBlocks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: System.ComponentModel.PropertyChangingEventHandler
  commentId: T:System.ComponentModel.PropertyChangingEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangingEventHandler
  nameWithType: PropertyChangingEventHandler
  fullName: System.ComponentModel.PropertyChangingEventHandler
- uid: Neutronium.BuildingBlocks.ViewModel.Set*
  commentId: Overload:Neutronium.BuildingBlocks.ViewModel.Set
  name: Set
  nameWithType: ViewModel.Set
  fullName: Neutronium.BuildingBlocks.ViewModel.Set
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged*
  commentId: Overload:Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged
  name: PropertyHasChanged
  nameWithType: ViewModel.PropertyHasChanged
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging*
  commentId: Overload:Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging
  name: PropertyIsChanging
  nameWithType: ViewModel.PropertyIsChanging
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging
