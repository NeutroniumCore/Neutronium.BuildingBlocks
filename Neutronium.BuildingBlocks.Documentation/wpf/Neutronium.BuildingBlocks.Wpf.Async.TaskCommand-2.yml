### YamlMime:ManagedReference
items:
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2
  commentId: T:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2
  id: TaskCommand`2
  parent: Neutronium.BuildingBlocks.Wpf.Async
  children:
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor(System.Func{System.Threading.CancellationToken,System.IProgress{`1},`0},System.Nullable{System.TimeSpan})
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process(System.Threading.CancellationToken)
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress
  langs:
  - csharp
  - vb
  name: TaskCommand<TResult, TProgress>
  nameWithType: TaskCommand<TResult, TProgress>
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>
  type: Class
  source:
    remote:
      path: Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: TaskCommand
    path: ../Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
    startLine: 13
  assemblies:
  - Neutronium.BuildingBlocks.Wpf
  namespace: Neutronium.BuildingBlocks.Wpf.Async
  summary: "\n<xref href=\"Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand%602\" data-throw-if-not-resolved=\"false\"></xref> Wpf implementation\n"
  example: []
  syntax:
    content: 'public sealed class TaskCommand<TResult, TProgress> : TaskCancellableCommand<TResult>, ITaskCancellableCommand<TResult, TProgress>, ITaskCancellableCommand<TResult>, INotifyPropertyChanged, INotifyPropertyChanging'
    typeParameters:
    - id: TResult
      description: ''
    - id: TProgress
      description: ''
    content.vb: >-
      Public NotInheritable Class TaskCommand(Of TResult, TProgress)
          Inherits TaskCancellableCommand(Of TResult)
          Implements ITaskCancellableCommand(Of TResult, TProgress), ITaskCancellableCommand(Of TResult), INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - Neutronium.BuildingBlocks.ViewModel
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  implements:
  - Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult},{TProgress}}
  - Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult}}
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Computing
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.CanBeExecuted
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Run
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Cancel
  - Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Results
  - Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  - Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  - Neutronium.BuildingBlocks.ViewModel.Set``1({T}@,{T},System.String)
  - Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  - Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: TaskCommand(Of TResult, TProgress)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress)
  name.vb: TaskCommand(Of TResult, TProgress)
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress
  id: Progress
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: TaskCommand<TResult, TProgress>.Progress
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.Progress
  type: Property
  source:
    remote:
      path: Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Progress
    path: ../Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
    startLine: 15
  assemblies:
  - Neutronium.BuildingBlocks.Wpf
  namespace: Neutronium.BuildingBlocks.Wpf.Async
  syntax:
    content: public IObservable<TProgress> Progress { get; }
    parameters: []
    return:
      type: System.IObservable{{TProgress}}
    content.vb: Public ReadOnly Property Progress As IObservable(Of TProgress)
  overload: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress*
  implements:
  - Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult},{TProgress}}.Progress
  nameWithType.vb: TaskCommand(Of TResult, TProgress).Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).Progress
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor(System.Func{System.Threading.CancellationToken,System.IProgress{`1},`0},System.Nullable{System.TimeSpan})
  commentId: M:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor(System.Func{System.Threading.CancellationToken,System.IProgress{`1},`0},System.Nullable{System.TimeSpan})
  id: '#ctor(System.Func{System.Threading.CancellationToken,System.IProgress{`1},`0},System.Nullable{System.TimeSpan})'
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2
  langs:
  - csharp
  - vb
  name: TaskCommand(Func<CancellationToken, IProgress<TProgress>, TResult>, Nullable<TimeSpan>)
  nameWithType: TaskCommand<TResult, TProgress>.TaskCommand(Func<CancellationToken, IProgress<TProgress>, TResult>, Nullable<TimeSpan>)
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.TaskCommand(System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, TResult>, System.Nullable<System.TimeSpan>)
  type: Constructor
  source:
    remote:
      path: Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: .ctor
    path: ../Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
    startLine: 32
  assemblies:
  - Neutronium.BuildingBlocks.Wpf
  namespace: Neutronium.BuildingBlocks.Wpf.Async
  summary: "\nConstruct a new TaskCommand\n"
  example: []
  syntax:
    content: public TaskCommand(Func<CancellationToken, IProgress<TProgress>, TResult> process, TimeSpan? throttleProgress = default(TimeSpan? ))
    parameters:
    - id: process
      type: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},{TResult}}
      description: "\nFunction to be executed in the command.\nWill be dispatcher in a Task.\n"
    - id: throttleProgress
      type: System.Nullable{System.TimeSpan}
      description: "\nIf not null TimeSpan used to throttle progress events\n"
    content.vb: Public Sub New(process As Func(Of CancellationToken, IProgress(Of TProgress), TResult), throttleProgress As TimeSpan? = Nothing)
  overload: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor*
  nameWithType.vb: TaskCommand(Of TResult, TProgress).TaskCommand(Func(Of CancellationToken, IProgress(Of TProgress), TResult), Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).TaskCommand(System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), TResult), System.Nullable(Of System.TimeSpan))
  name.vb: TaskCommand(Func(Of CancellationToken, IProgress(Of TProgress), TResult), Nullable(Of TimeSpan))
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process(System.Threading.CancellationToken)
  commentId: M:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process(System.Threading.CancellationToken)
  id: Process(System.Threading.CancellationToken)
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2
  langs:
  - csharp
  - vb
  name: Process(CancellationToken)
  nameWithType: TaskCommand<TResult, TProgress>.Process(CancellationToken)
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.Process(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
      branch: master
      repo: https://github.com/NeutroniumCore/ViewModel.Tools.git
    id: Process
    path: ../Neutronium.BuildingBlocks.Wpf/Async/TaskCommand_TR_TP.cs
    startLine: 43
  assemblies:
  - Neutronium.BuildingBlocks.Wpf
  namespace: Neutronium.BuildingBlocks.Wpf.Async
  syntax:
    content: protected override Task<TResult> Process(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{TResult}}
    content.vb: Protected Overrides Function Process(cancellationToken As CancellationToken) As Task(Of TResult)
  overridden: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Process(System.Threading.CancellationToken)
  overload: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process*
  nameWithType.vb: TaskCommand(Of TResult, TProgress).Process(CancellationToken)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).Process(System.Threading.CancellationToken)
references:
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
  commentId: T:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
  name: ITaskCancellableCommand<TResult, TProgress>
  nameWithType: ITaskCancellableCommand<TResult, TProgress>
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult, TProgress>
  nameWithType.vb: ITaskCancellableCommand(Of TResult, TProgress)
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult, TProgress)
  name.vb: ITaskCancellableCommand(Of TResult, TProgress)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async
  commentId: N:Neutronium.BuildingBlocks.Wpf.Async
  name: Neutronium.BuildingBlocks.Wpf.Async
  nameWithType: Neutronium.BuildingBlocks.Wpf.Async
  fullName: Neutronium.BuildingBlocks.Wpf.Async
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Neutronium.BuildingBlocks.ViewModel
  commentId: T:Neutronium.BuildingBlocks.ViewModel
  parent: Neutronium.BuildingBlocks
  name: ViewModel
  nameWithType: ViewModel
  fullName: Neutronium.BuildingBlocks.ViewModel
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  commentId: T:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}
  parent: Neutronium.BuildingBlocks.Wpf.Async
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
  name: TaskCancellableCommand<TResult>
  nameWithType: TaskCancellableCommand<TResult>
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>
  nameWithType.vb: TaskCancellableCommand(Of TResult)
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult)
  name.vb: TaskCancellableCommand(Of TResult)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
    name: TaskCancellableCommand
    nameWithType: TaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
    name: TaskCancellableCommand
    nameWithType: TaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult},{TProgress}}
  commentId: T:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{`0,`1}
  parent: Neutronium.BuildingBlocks.ApplicationTools
  definition: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
  name: ITaskCancellableCommand<TResult, TProgress>
  nameWithType: ITaskCancellableCommand<TResult, TProgress>
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult, TProgress>
  nameWithType.vb: ITaskCancellableCommand(Of TResult, TProgress)
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult, TProgress)
  name.vb: ITaskCancellableCommand(Of TResult, TProgress)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult}}
  commentId: T:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{`0}
  parent: Neutronium.BuildingBlocks.ApplicationTools
  definition: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
  name: ITaskCancellableCommand<TResult>
  nameWithType: ITaskCancellableCommand<TResult>
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult>
  nameWithType.vb: ITaskCancellableCommand(Of TResult)
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult)
  name.vb: ITaskCancellableCommand(Of TResult)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Computing
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.Computing
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Computing
  name: Computing
  nameWithType: TaskCancellableCommand<TResult>.Computing
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Computing
  nameWithType.vb: TaskCancellableCommand(Of TResult).Computing
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Computing
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.CanBeExecuted
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.CanBeExecuted
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.CanBeExecuted
  name: CanBeExecuted
  nameWithType: TaskCancellableCommand<TResult>.CanBeExecuted
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.CanBeExecuted
  nameWithType.vb: TaskCancellableCommand(Of TResult).CanBeExecuted
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).CanBeExecuted
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Run
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.Run
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Run
  name: Run
  nameWithType: TaskCancellableCommand<TResult>.Run
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Run
  nameWithType.vb: TaskCancellableCommand(Of TResult).Run
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Run
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Cancel
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.Cancel
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Cancel
  name: Cancel
  nameWithType: TaskCancellableCommand<TResult>.Cancel
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Cancel
  nameWithType.vb: TaskCancellableCommand(Of TResult).Cancel
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Cancel
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Results
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.Results
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Results
  name: Results
  nameWithType: TaskCancellableCommand<TResult>.Results
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Results
  nameWithType.vb: TaskCancellableCommand(Of TResult).Results
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Results
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  commentId: E:Neutronium.BuildingBlocks.ViewModel.PropertyChanged
  parent: Neutronium.BuildingBlocks.ViewModel
  name: PropertyChanged
  nameWithType: ViewModel.PropertyChanged
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyChanged
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  commentId: E:Neutronium.BuildingBlocks.ViewModel.PropertyChanging
  parent: Neutronium.BuildingBlocks.ViewModel
  name: PropertyChanging
  nameWithType: ViewModel.PropertyChanging
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyChanging
- uid: Neutronium.BuildingBlocks.ViewModel.Set``1({T}@,{T},System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  definition: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  name: Set<T>(T, T, String)
  nameWithType: ViewModel.Set<T>(T, T, String)
  fullName: Neutronium.BuildingBlocks.ViewModel.Set<T>(T, T, System.String)
  nameWithType.vb: ViewModel.Set(Of T)(T, T, String)
  fullName.vb: Neutronium.BuildingBlocks.ViewModel.Set(Of T)(T, T, System.String)
  name.vb: Set(Of T)(T, T, String)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
    name: Set<T>
    nameWithType: ViewModel.Set<T>
    fullName: Neutronium.BuildingBlocks.ViewModel.Set<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
    name: Set(Of T)
    nameWithType: ViewModel.Set(Of T)
    fullName: Neutronium.BuildingBlocks.ViewModel.Set(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  isExternal: true
  name: PropertyHasChanged(String)
  nameWithType: ViewModel.PropertyHasChanged(String)
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
    name: PropertyHasChanged
    nameWithType: ViewModel.PropertyHasChanged
    fullName: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged(System.String)
    name: PropertyHasChanged
    nameWithType: ViewModel.PropertyHasChanged
    fullName: Neutronium.BuildingBlocks.ViewModel.PropertyHasChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  parent: Neutronium.BuildingBlocks.ViewModel
  isExternal: true
  name: PropertyIsChanging(String)
  nameWithType: ViewModel.PropertyIsChanging(String)
  fullName: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
    name: PropertyIsChanging
    nameWithType: ViewModel.PropertyIsChanging
    fullName: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging(System.String)
    name: PropertyIsChanging
    nameWithType: ViewModel.PropertyIsChanging
    fullName: Neutronium.BuildingBlocks.ViewModel.PropertyIsChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Neutronium.BuildingBlocks
  commentId: N:Neutronium.BuildingBlocks
  name: Neutronium.BuildingBlocks
  nameWithType: Neutronium.BuildingBlocks
  fullName: Neutronium.BuildingBlocks
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
  commentId: T:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
  name: TaskCancellableCommand<TResult>
  nameWithType: TaskCancellableCommand<TResult>
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>
  nameWithType.vb: TaskCancellableCommand(Of TResult)
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult)
  name.vb: TaskCancellableCommand(Of TResult)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
    name: TaskCancellableCommand
    nameWithType: TaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1
    name: TaskCancellableCommand
    nameWithType: TaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ApplicationTools
  commentId: N:Neutronium.BuildingBlocks.ApplicationTools
  name: Neutronium.BuildingBlocks.ApplicationTools
  nameWithType: Neutronium.BuildingBlocks.ApplicationTools
  fullName: Neutronium.BuildingBlocks.ApplicationTools
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
  commentId: T:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
  name: ITaskCancellableCommand<TResult>
  nameWithType: ITaskCancellableCommand<TResult>
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult>
  nameWithType.vb: ITaskCancellableCommand(Of TResult)
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult)
  name.vb: ITaskCancellableCommand(Of TResult)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`1
    name: ITaskCancellableCommand
    nameWithType: ITaskCancellableCommand
    fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Computing
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Computing
  name: Computing
  nameWithType: TaskCancellableCommand<TResult>.Computing
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Computing
  nameWithType.vb: TaskCancellableCommand(Of TResult).Computing
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Computing
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.CanBeExecuted
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.CanBeExecuted
  name: CanBeExecuted
  nameWithType: TaskCancellableCommand<TResult>.CanBeExecuted
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.CanBeExecuted
  nameWithType.vb: TaskCancellableCommand(Of TResult).CanBeExecuted
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).CanBeExecuted
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Run
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Run
  name: Run
  nameWithType: TaskCancellableCommand<TResult>.Run
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Run
  nameWithType.vb: TaskCancellableCommand(Of TResult).Run
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Run
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Cancel
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Cancel
  name: Cancel
  nameWithType: TaskCancellableCommand<TResult>.Cancel
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Cancel
  nameWithType.vb: TaskCancellableCommand(Of TResult).Cancel
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Cancel
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Results
  commentId: P:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Results
  name: Results
  nameWithType: TaskCancellableCommand<TResult>.Results
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Results
  nameWithType.vb: TaskCancellableCommand(Of TResult).Results
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Results
- uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  commentId: M:Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
  isExternal: true
  name: Set<T>(T, T, String)
  nameWithType: ViewModel.Set<T>(T, T, String)
  fullName: Neutronium.BuildingBlocks.ViewModel.Set<T>(T, T, System.String)
  nameWithType.vb: ViewModel.Set(Of T)(T, T, String)
  fullName.vb: Neutronium.BuildingBlocks.ViewModel.Set(Of T)(T, T, System.String)
  name.vb: Set(Of T)(T, T, String)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
    name: Set<T>
    nameWithType: ViewModel.Set<T>
    fullName: Neutronium.BuildingBlocks.ViewModel.Set<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.ViewModel.Set``1(``0@,``0,System.String)
    name: Set(Of T)
    nameWithType: ViewModel.Set(Of T)
    fullName: Neutronium.BuildingBlocks.ViewModel.Set(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress*
  commentId: Overload:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Progress
  name: Progress
  nameWithType: TaskCommand<TResult, TProgress>.Progress
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.Progress
  nameWithType.vb: TaskCommand(Of TResult, TProgress).Progress
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).Progress
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult},{TProgress}}.Progress
  commentId: P:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{`0,`1}.Progress
  parent: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand{{TResult},{TProgress}}
  definition: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2.Progress
  name: Progress
  nameWithType: ITaskCancellableCommand<TResult, TProgress>.Progress
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult, TProgress>.Progress
  nameWithType.vb: ITaskCancellableCommand(Of TResult, TProgress).Progress
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult, TProgress).Progress
- uid: System.IObservable{{TProgress}}
  commentId: T:System.IObservable{`1}
  parent: System
  definition: System.IObservable`1
  name: IObservable<TProgress>
  nameWithType: IObservable<TProgress>
  fullName: System.IObservable<TProgress>
  nameWithType.vb: IObservable(Of TProgress)
  fullName.vb: System.IObservable(Of TProgress)
  name.vb: IObservable(Of TProgress)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2.Progress
  commentId: P:Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand`2.Progress
  name: Progress
  nameWithType: ITaskCancellableCommand<TResult, TProgress>.Progress
  fullName: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand<TResult, TProgress>.Progress
  nameWithType.vb: ITaskCancellableCommand(Of TResult, TProgress).Progress
  fullName.vb: Neutronium.BuildingBlocks.ApplicationTools.ITaskCancellableCommand(Of TResult, TProgress).Progress
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor*
  commentId: Overload:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.#ctor
  name: TaskCommand
  nameWithType: TaskCommand<TResult, TProgress>.TaskCommand
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.TaskCommand
  nameWithType.vb: TaskCommand(Of TResult, TProgress).TaskCommand
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).TaskCommand
- uid: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},{TResult}}
  commentId: T:System.Func{System.Threading.CancellationToken,System.IProgress{`1},`0}
  parent: System
  definition: System.Func`3
  name: Func<CancellationToken, IProgress<TProgress>, TResult>
  nameWithType: Func<CancellationToken, IProgress<TProgress>, TResult>
  fullName: System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, TResult>
  nameWithType.vb: Func(Of CancellationToken, IProgress(Of TProgress), TResult)
  fullName.vb: System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), TResult)
  name.vb: Func(Of CancellationToken, IProgress(Of TProgress), TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProgress
    nameWithType: TProgress
    fullName: TProgress
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}.Process(System.Threading.CancellationToken)
  commentId: M:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{`0}.Process(System.Threading.CancellationToken)
  parent: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand{{TResult}}
  definition: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
  name: Process(CancellationToken)
  nameWithType: TaskCancellableCommand<TResult>.Process(CancellationToken)
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Process(System.Threading.CancellationToken)
  nameWithType.vb: TaskCancellableCommand(Of TResult).Process(CancellationToken)
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Process(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
    name: Process
    nameWithType: TaskCancellableCommand<TResult>.Process
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
    name: Process
    nameWithType: TaskCancellableCommand(Of TResult).Process
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process*
  commentId: Overload:Neutronium.BuildingBlocks.Wpf.Async.TaskCommand`2.Process
  name: Process
  nameWithType: TaskCommand<TResult, TProgress>.Process
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand<TResult, TProgress>.Process
  nameWithType.vb: TaskCommand(Of TResult, TProgress).Process
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCommand(Of TResult, TProgress).Process
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
  commentId: M:Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
  isExternal: true
  name: Process(CancellationToken)
  nameWithType: TaskCancellableCommand<TResult>.Process(CancellationToken)
  fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Process(System.Threading.CancellationToken)
  nameWithType.vb: TaskCancellableCommand(Of TResult).Process(CancellationToken)
  fullName.vb: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Process(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
    name: Process
    nameWithType: TaskCancellableCommand<TResult>.Process
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand<TResult>.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand`1.Process(System.Threading.CancellationToken)
    name: Process
    nameWithType: TaskCancellableCommand(Of TResult).Process
    fullName: Neutronium.BuildingBlocks.Wpf.Async.TaskCancellableCommand(Of TResult).Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
